引擎和前作陆奥秘汤恋一样是Unity
https://www.bilibili.com/opus/830797634583134281?from=search&spm_id_from=333.337.0.0
和图勒一样也得先看一遍这个。
工具：AssetStudiogui UABEA XUnity
AssetStudiogui：分析resources.assets用，可以看到这游戏出现在下方文本框里99%的东西。
UABEA：真正的解包与封包工具，我真不知道那天为啥灵感来了点开neta，不然永远也汉不到文章和邮件。
XUnity：有少数文本（100句左右）只能用插件一句句去读取，不过这工作量很低所以也无所谓就是了。另外本作的取名系统汉化也是基于这个插件实现的，直接暴力写了几千行把日文汉字转换成了中文汉字。
https://www.bilibili.com/video/BV1YwcJeTEB3/?share_source=copy_web&vd_source=f0182cec3e36d07032b9aeecda64c075
（特别注意字体的部分，我目前只知道这么一种为Unity添加中文字体的方法）
translator++？可选，他们都说好用我一直没玩明白，我感觉是真没用吧，我做的两个unity项目都不靠它而是靠XUnity和直接解包实现的。
总结：愈发感到Unity的解包是纯玄学，这引擎你都不知道文本藏在哪。比如上文提到的neta就在Furaiki_Data\StreamingAssets\StandaloneWindows64里。

（以下是当时随便记的，现在看没意义）

解包：
一开始以为扔到AssetStudio里秒了，结果发现提出来的只有全对话，没有文章。于是想起采用老方法，就是进游戏去跑一遍，插件自己会读出来。
但是这个方法傻逼的地方在于这个游戏有200+篇文章，我得玩到那个位置才能去读取，而且很多文章都有选项差异，这其中的工作量难以想象。最好还是能像对话一样解包直接改。明天再研究怎么弄。

4.28 新突破：
在a。。。c.dll下面有花札以及部分夜间记事对话框文本，后面记得汉一下，用dnspy搜日语の就都找出来了——似乎不能编辑……其实无所谓了
（发布后注：最后采用了XUnity一句句读取的方法，因为总量就100句左右所以无所谓）
邮件文章在neta里
neta操作：uabe去读取，读取完之后新保存一个，再粘回原文档里面
现在得去/r/n（保留空格和其他逗号）后跑一遍
（发布后注：文章和邮件的/r/n最后被我全部替换掉了，话说这游戏拿英文逗号当真正起作用的换行符，难怪我看英化补丁发布者说翻不了文章部分www）
新旧两个之间也许有兼容性问题，值得注意！

t++使用方法，右键全部选择导出到文件夹，出来4个txt，然后替换至AutoTranslator\Translation\zh\Text\translator++的txt即可生效
所有新读取的文本都在外面那个txt，但测试时真正生效的是里面那个txt，
补丁化后生效的是外面那个txt。
由于实际上生效与否和t++版毫无关系，会出现t++不行而补丁版正常的情况，推荐单独拿一个副本出来跑t++程序
如何添加漏读取的新文本？一样的，不会很多的话甚至xlsx或者txt化去做都行。

