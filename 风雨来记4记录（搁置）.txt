我不是很想做这个项目，因为NS现在的两种汉化实现形式分别是实机软破和模拟器+mod，最好是能像1代那样为正版制作补丁。
当然这么考虑有很多原因，相关的法律风险也始终存在。（而且45两代同引擎，最好是能一起做掉啊）也许再等个两三年ns和psv一样在商业层面上死透了就会做了。
20250712：搁置，字库问题解决不了，等3代弄完再说吧。
To comply with US laws, you have to buy the game and dump it using nxdumptool from a CFW-capable console to obtain a legal copy for emulation. Software distribution laws in other countries may vary.我擦白皮也太变态，还能有这种理由的


技术层面记录：
用yuzu模拟器打好所有补丁和dlc，有个转储RomFS按钮，点一下会冒出来解包文件（真方便！之前还以为NS解包很麻烦呢）
找到script文件夹，有csv和sc两种文件，可知本作是那种最简单的无加密情况。其中csv是实质用于游戏内的，对它进行修改即可汉化；sc是脚本文件，记录了文本演出以及开发时的批注。
csv用UTF-16 LE可正常读取出日语文本，但是我们得把csv转成json，AI处理json文本的正确率比其他格式高多了。
而我手头的GalTransl_DumpInjector只支持UTF-8，所以接下来就不得不使用Powershell进行转化了。

# csv批量重命名txt
Set-Location "你的文件夹路径"
Get-ChildItem *.csv | Rename-Item -NewName { $_.Name -replace '\.csv$','.txt' }

#UTF-16 LE BOM的TXT文件转换为UTF-8
$inputFolder = "C:\Users\Vison\Desktop\本体utf16txt"
$outputFolder = "C:\Users\Vison\Desktop\本体utf8txt"

if (!(Test-Path $outputFolder)) {
    New-Item -ItemType Directory -Path $outputFolder
}

Get-ChildItem -Path $inputFolder -Filter *.txt | ForEach-Object {
    $content = Get-Content -Path $_.FullName -Encoding Unicode
    $outputPath = Join-Path -Path $outputFolder -ChildPath $_.Name
    $content | Out-File -FilePath $outputPath -Encoding utf8
}

#UTF-8转换回UTF-16 LE BOM（待后面用）
$inputFolder = "输入文件夹路径"
$outputFolder = "输出文件夹路径"

if (!(Test-Path $outputFolder)) {
    New-Item -ItemType Directory -Path $outputFolder
}

Get-ChildItem -Path $inputFolder -Filter *.txt | ForEach-Object {
    $content = Get-Content -Path $_.FullName -Encoding UTF8
    $outputPath = Join-Path -Path $outputFolder -ChildPath $_.Name
    $content | Out-File -FilePath $outputPath -Encoding Unicode  # Unicode在Windows中代表UTF-16 LE with BOM
}
以上都是D一串写的，至于正则D一串似乎写不明白，扔给G一串得到了(?:#N\([^)]*\)|#V\([^)]*\))*([^#]+)
把提出来的文本一看————呃，好像断得也不太漂亮，不过能把人名什么裁掉已经可以了。

字库（G一串说的，还没验证）
非常棒的观察！“只有部分中文能被正常显示”是一个非常典型且重要的问题。这标志着你已经成功地解决了**编码问题**，但遇到了汉化过程中的第二大拦路虎——**字库（Font）问题**。

让我为你详细解析这个问题的原因，并提供一套完整的解决方案。

-----

### **问题诊断：乱码 vs. 缺字**

首先，要清晰地分辨你遇到的情况：

1.  **乱码 (Encoding Issue):** 所有中文都显示为一堆无意义的符号（如“æ–‡å—åŒ–ã‘ã‚” or “????”）。这代表你的CSV文件没有存为`UTF-8`编码，游戏无法理解你的文本数据。
2.  **缺字 (Font Issue):** **一部分简单的、常见的中文**（如“你我他”、“一二三”）能正常显示，而另一部分**复杂的、不常用的中文**则显示为方块（□）、问号（?）或直接消失。**这就是你遇到的情况。**

**缺字的核心原因：**
游戏内置的日文字体文件（字库），就像一本字符的“字典”。它包含了完整的日语假名、日用汉字以及一些基础的ASCII字符。但是，这本“日文字典”里并没有收录所有（尤其是简体）中文字符的“字形”（Glyph）。

当你输入的中文恰好是日文中也存在的汉字时（例如“世界”、“攻击”），游戏就能在它的字库里找到对应的字形并显示出来。而当你输入一个日文字库里没有的字（例如“汉”、“化”、“体”等），游戏找不到对应的字形，就只能显示一个方块“□”来表示“这个位置有字符，但我画不出来”。

-----

### **解决方案：替换游戏的原生字库**

解决办法非常直接：找到游戏使用的字体文件，用一个包含完整中文字符的字体文件去替换它。这个过程与你替换CSV文件的原理完全相同，都是利用LayeredFS。

#### **第一步：在RomFS中定位字体文件**

你需要回到你之前解包出的`RomFS`文件夹中，寻找游戏所使用的字体文件。

  * **常见存放目录：**

      * `font/`
      * `ui/font/`
      * `common/font/`
      * `resource/`

  * **常见字体文件后缀名：**

      * **通用格式:** `.ttf` (TrueType Font), `.otf` (OpenType Font)。如果找到这种格式，恭喜你，替换工作会非常简单。
      * **任天堂专有格式:** `.bcfnt`, `.bffnt`。这是Switch上最常见的字体格式，需要多一步转换操作。
      * 文件名通常会包含`font`字样，例如 `JP_Font.bcfnt`, `SystemFont.otf`, `ui_font.ttf` 等。

#### **第二步：准备一个万能的中文字体**

你需要一个“大而全”的中文字体文件来作为替换源。

  * **首选推荐：思源黑体 (Source Han Sans)**

      * 这是由Google和Adobe联合开发的开源字体，质量极高。
      * 它**同时包含**简体中文、繁体中文、日文、韩文等所有字符，是游戏汉化的“圣杯”和“万金油”，能完美解决缺字问题。
      * 你可以在网上搜索“思源黑体”下载，选择获取其`.otf`或`.ttf`格式的文件。

  * **其他选择：**

      * 你也可以使用你电脑系统里自带的中文字体，例如**黑体 (SimHei)**、\*\*微软雅黑 (Microsoft YaHei)\*\*等。

#### **第三三步：处理并替换字体文件**

根据你在第一步中找到的字体文件格式，选择对应的处理路径。

##### **情况A：如果原字体是 `.ttf` 或 `.otf` (简单路径)**

1.  **重命名:** 将你下载的思源黑体文件（例如 `SourceHanSansCN-Regular.otf`）**重命名**，使其与游戏中的原始字体文件名**完全一致**。例如，如果原文件是 `SystemFont.ttf`，你就把思源黑体也改成这个名字。
2.  **放置:** 将这个改好名的新字体文件，放到你的LayeredFS补丁文件夹中对应的路径下。

##### **情况B：如果原字体是 `.bcfnt` 或 `.bffnt` (高级路径)**

这种专有格式不能直接替换，你需要将其转换为任天堂的格式。**Switch Toolbox** 是完成这项工作的最佳工具。

1.  **打开Switch Toolbox。**
2.  在菜单栏选择 `Tools` -\> `Font Editor`。
3.  在弹出的字体编辑器窗口中，点击 `File` -\> `Open`，加载你从游戏中找到的**原始 `.bcfnt` 文件**。这一步很重要，可以保留原始字体的大小、间距等设置。
4.  加载后，你应该能看到原始字体的信息。现在，点击 `File` -\> `Import` (或类似的选项)，选择你下载好的思源黑体 `.ttf` / `.otf` 文件。
5.  工具会用思源黑体的数据来填充这个字体。之后，点击 `File` -\> `Save` 或 `Save As`，将其保存为一个**新的 `.bcfnt` 文件**。确保保存的文件名与原始文件名**完全一致**。
6.  **放置:** 将这个新生成、包含了中文字库的 `.bcfnt` 文件，放到你的LayeredFS补丁文件夹中对应的路径下。

#### **第四步：更新你的汉化补丁并测试**

现在，你的汉化补丁文件夹应该同时包含文本和字体了。

**最终的补丁结构示例：**

```
我的汉化补丁/
└── romfs/
    ├── message/
    │   └── JPja/
    │       └── dialogue.csv      <-- 你翻译的文本文件
    └── font/
        └── SystemFont.bcfnt      <-- 你替换后的中文字体文件
```

将这个更新后的补丁文件夹放入Yuzu的Mod目录（或真实Switch的SD卡），重新启动游戏。现在，游戏会加载你提供的、无所不包的思源黑体，所有之前“缺席”的中文都应该能被正常显示出来了！

**重要提示：**

  * **字体大小问题：** 替换字体后，可能会出现中文比原文日文宽或高，导致文字溢出对话框的情况。这是更深层次的UI调整问题，初学者可以暂时忽略。
  * **多字体文件：** 游戏可能不止一个字体文件（例如，对话用一个，UI标题用另一个）。如果替换一个后仍有地方缺字，请继续在RomFS中寻找其他字体文件并一并替换。